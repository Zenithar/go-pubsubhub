// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pubsubhub/rpc/v1/code.proto

package rpcv1

import (
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Code defines status codes.
type Code int32

const (
	Code_CODE_INVALID Code = 0
	// HTTP Mapping: 200 OK
	Code_CODE_OK Code = 1
	// HTTP Mapping: 499 Client Closed Request
	Code_CODE_CANCELLED Code = 2
	// HTTP Mapping: 500 Internal Server Error
	Code_CODE_UNKNOWN Code = 3
	// HTTP Mapping: 400 Bad Request
	Code_CODE_INVALID_ARGUMENT Code = 4
	// HTTP Mapping: 504 Gateway Timeout
	Code_CODE_DEADLINE_EXCEEDED Code = 5
	// HTTP Mapping: 404 Not Found
	Code_CODE_NOT_FOUND Code = 6
	// HTTP Mapping: 409 Conflict
	Code_CODE_ALREADY_EXISTS Code = 7
	// HTTP Mapping: 403 Forbidden
	Code_CODE_PERMISSION_DENIED Code = 8
	// HTTP Mapping: 401 Unauthorized
	Code_CODE_UNAUTHENTICATED Code = 9
	// HTTP Mapping: 429 Too Many Requests
	Code_CODE_RESOURCE_EXHAUSTED Code = 10
	// HTTP Mapping: 412 Precondition Failed
	Code_CODE_FAILED_PRECONDITION Code = 11
	// HTTP Mapping: 409 Conflict
	Code_CODE_ABORTED Code = 12
	// HTTP Mapping: 400 Bad Request
	Code_CODE_OUT_OF_RANGE Code = 13
	// HTTP Mapping: 501 Not Implemented
	Code_CODE_UNIMPLEMENTED Code = 14
	// HTTP Mapping: 500 Internal Server Error
	Code_CODE_INTERNAL Code = 15
	// HTTP Mapping: 503 Service Unavailable
	Code_CODE_UNAVAILABLE Code = 16
)

var Code_name = map[int32]string{
	0:  "CODE_INVALID",
	1:  "CODE_OK",
	2:  "CODE_CANCELLED",
	3:  "CODE_UNKNOWN",
	4:  "CODE_INVALID_ARGUMENT",
	5:  "CODE_DEADLINE_EXCEEDED",
	6:  "CODE_NOT_FOUND",
	7:  "CODE_ALREADY_EXISTS",
	8:  "CODE_PERMISSION_DENIED",
	9:  "CODE_UNAUTHENTICATED",
	10: "CODE_RESOURCE_EXHAUSTED",
	11: "CODE_FAILED_PRECONDITION",
	12: "CODE_ABORTED",
	13: "CODE_OUT_OF_RANGE",
	14: "CODE_UNIMPLEMENTED",
	15: "CODE_INTERNAL",
	16: "CODE_UNAVAILABLE",
}

var Code_value = map[string]int32{
	"CODE_INVALID":             0,
	"CODE_OK":                  1,
	"CODE_CANCELLED":           2,
	"CODE_UNKNOWN":             3,
	"CODE_INVALID_ARGUMENT":    4,
	"CODE_DEADLINE_EXCEEDED":   5,
	"CODE_NOT_FOUND":           6,
	"CODE_ALREADY_EXISTS":      7,
	"CODE_PERMISSION_DENIED":   8,
	"CODE_UNAUTHENTICATED":     9,
	"CODE_RESOURCE_EXHAUSTED":  10,
	"CODE_FAILED_PRECONDITION": 11,
	"CODE_ABORTED":             12,
	"CODE_OUT_OF_RANGE":        13,
	"CODE_UNIMPLEMENTED":       14,
	"CODE_INTERNAL":            15,
	"CODE_UNAVAILABLE":         16,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216d5c4fcf41891a, []int{0}
}

func init() {
	proto.RegisterEnum("pubsubhub.rpc.v1.Code", Code_name, Code_value)
}

func init() { proto.RegisterFile("pubsubhub/rpc/v1/code.proto", fileDescriptor_216d5c4fcf41891a) }

var fileDescriptor_216d5c4fcf41891a = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0x5b, 0x6e, 0xd3, 0x40,
	0x14, 0xc5, 0x49, 0x1f, 0x74, 0xfa, 0xe0, 0x76, 0xe8, 0x8b, 0x16, 0xbc, 0x00, 0x24, 0x6c, 0x59,
	0xac, 0x60, 0xe2, 0xb9, 0x69, 0x47, 0x9d, 0xcc, 0x58, 0x63, 0x3b, 0x04, 0x54, 0xc9, 0xc2, 0x6e,
	0x48, 0xfb, 0x01, 0xb6, 0xdc, 0x24, 0x1f, 0x2c, 0x81, 0x65, 0xf0, 0x85, 0x58, 0x09, 0xe2, 0x8b,
	0x25, 0x40, 0x56, 0xc1, 0x27, 0xf2, 0x34, 0x58, 0x51, 0xff, 0x7c, 0xee, 0x39, 0x3e, 0xf7, 0x71,
	0x86, 0x9c, 0x55, 0xb3, 0xfc, 0x6e, 0x96, 0xdf, 0xcc, 0x72, 0xbf, 0xae, 0x0a, 0x7f, 0x1e, 0xf8,
	0x45, 0x79, 0x3d, 0xf6, 0xaa, 0xba, 0x9c, 0x96, 0x14, 0x5a, 0xd2, 0xab, 0xab, 0xc2, 0x9b, 0x07,
	0xa7, 0xaf, 0x26, 0xb7, 0xd3, 0x06, 0x16, 0xe5, 0x47, 0x7f, 0x52, 0x4e, 0x4a, 0xdf, 0x0a, 0xf3,
	0xd9, 0x07, 0x8b, 0x2c, 0xb0, 0x5f, 0xf7, 0x06, 0x2f, 0xbf, 0x74, 0xc9, 0x5a, 0x58, 0x5e, 0x8f,
	0x29, 0x90, 0x9d, 0x50, 0x73, 0xcc, 0x84, 0x1a, 0x32, 0x29, 0x38, 0x3c, 0xa2, 0xdb, 0x64, 0xd3,
	0x56, 0xf4, 0x25, 0x38, 0x94, 0x92, 0x3d, 0x0b, 0x42, 0xa6, 0x42, 0x94, 0x12, 0x39, 0x74, 0xda,
	0x5f, 0x52, 0x75, 0xa9, 0xf4, 0x1b, 0x05, 0x5d, 0xfa, 0x8c, 0x1c, 0xae, 0x9a, 0x64, 0xcc, 0x9c,
	0xa7, 0x03, 0x54, 0x09, 0xac, 0xd1, 0x53, 0x72, 0x64, 0x29, 0x8e, 0x8c, 0x4b, 0xa1, 0x30, 0xc3,
	0x51, 0x88, 0xc8, 0x91, 0xc3, 0x7a, 0x6b, 0xae, 0x74, 0x92, 0xf5, 0x75, 0xaa, 0x38, 0x6c, 0xd0,
	0x63, 0xf2, 0xd4, 0xd6, 0x98, 0x34, 0xc8, 0xf8, 0xdb, 0x0c, 0x47, 0x22, 0x4e, 0x62, 0xd8, 0x6c,
	0x8d, 0x22, 0x34, 0x03, 0x11, 0xc7, 0x42, 0xab, 0x8c, 0xa3, 0x12, 0xc8, 0xe1, 0x31, 0x3d, 0x21,
	0x07, 0xcb, 0x89, 0x58, 0x9a, 0x5c, 0xa0, 0x4a, 0x44, 0xc8, 0x12, 0xe4, 0xb0, 0x45, 0xcf, 0xc8,
	0xb1, 0x65, 0x0c, 0xc6, 0x3a, 0x35, 0x61, 0xd3, 0xfe, 0x82, 0xa5, 0x71, 0x43, 0x12, 0xfa, 0x9c,
	0x9c, 0x58, 0xb2, 0xcf, 0x84, 0x44, 0x9e, 0x45, 0x06, 0x43, 0xad, 0xb8, 0x48, 0x84, 0x56, 0xb0,
	0xdd, 0xae, 0xc9, 0x7a, 0xda, 0x34, 0xfa, 0x1d, 0x7a, 0x48, 0xf6, 0xef, 0x2f, 0x93, 0x26, 0x99,
	0xee, 0x67, 0x86, 0xa9, 0x73, 0x84, 0x5d, 0x7a, 0x44, 0xe8, 0xb2, 0xbb, 0x18, 0x44, 0x12, 0x9b,
	0xc5, 0x91, 0xc3, 0x1e, 0xdd, 0x27, 0xbb, 0xcb, 0xab, 0x24, 0x68, 0x14, 0x93, 0xf0, 0x84, 0x1e,
	0x10, 0xf8, 0x3f, 0xe8, 0x90, 0x09, 0xc9, 0x7a, 0x12, 0x01, 0x7a, 0x77, 0x7f, 0xff, 0xb8, 0xce,
	0xb7, 0x85, 0xeb, 0xfc, 0x58, 0xb8, 0xce, 0xaf, 0x85, 0xeb, 0xfc, 0x5e, 0xb8, 0x0e, 0x79, 0x51,
	0xd6, 0x13, 0xef, 0xf3, 0xf8, 0xd3, 0xed, 0xf4, 0xe6, 0x7d, 0xed, 0x3d, 0x0c, 0xbc, 0xb7, 0xd5,
	0xc4, 0x17, 0x35, 0x61, 0x46, 0xce, 0xbb, 0xf5, 0xba, 0x2a, 0xe6, 0xc1, 0xd7, 0x4e, 0x37, 0x32,
	0xa3, 0xef, 0x1d, 0x88, 0x5a, 0xb1, 0xa9, 0x0a, 0x6f, 0x18, 0xfc, 0x5c, 0x29, 0x5d, 0x99, 0xaa,
	0xb8, 0x1a, 0x06, 0xf9, 0x86, 0x7d, 0x08, 0xaf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x80, 0x75,
	0xcf, 0x22, 0x68, 0x02, 0x00, 0x00,
}
