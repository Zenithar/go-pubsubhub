// MIT License
//
// Copyright (c) 2019 Thibault NORMAND
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package pubsubhub.rpc.v1;

option (gogoproto.equal_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option csharp_namespace = "Pubsubhub.Rpc.V1";
option go_package = "rpcv1";
option java_multiple_files = true;
option java_outer_classname = "CodeProto";
option java_package = "org.zenithar.pubsubhub.rpc.v1";
option objc_class_prefix = "PRX";
option php_namespace = "Pubsubhub\\Rpc\\V1";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// -----------------------------------------------------------------------------

// Code defines status codes.
enum Code {
  CODE_INVALID = 0;
  // HTTP Mapping: 200 OK
  CODE_OK = 1;
  // HTTP Mapping: 499 Client Closed Request
  CODE_CANCELLED = 2;
  // HTTP Mapping: 500 Internal Server Error
  CODE_UNKNOWN = 3;
  // HTTP Mapping: 400 Bad Request
  CODE_INVALID_ARGUMENT = 4;
  // HTTP Mapping: 504 Gateway Timeout
  CODE_DEADLINE_EXCEEDED = 5;
  // HTTP Mapping: 404 Not Found
  CODE_NOT_FOUND = 6;
  // HTTP Mapping: 409 Conflict
  CODE_ALREADY_EXISTS = 7;
  // HTTP Mapping: 403 Forbidden
  CODE_PERMISSION_DENIED = 8;
  // HTTP Mapping: 401 Unauthorized
  CODE_UNAUTHENTICATED = 9;
  // HTTP Mapping: 429 Too Many Requests
  CODE_RESOURCE_EXHAUSTED = 10;
  // HTTP Mapping: 412 Precondition Failed
  CODE_FAILED_PRECONDITION = 11;
  // HTTP Mapping: 409 Conflict
  CODE_ABORTED = 12;
  // HTTP Mapping: 400 Bad Request
  CODE_OUT_OF_RANGE = 13;
  // HTTP Mapping: 501 Not Implemented
  CODE_UNIMPLEMENTED = 14;
  // HTTP Mapping: 500 Internal Server Error
  CODE_INTERNAL = 15;
  // HTTP Mapping: 503 Service Unavailable
  CODE_UNAVAILABLE = 16;
}
